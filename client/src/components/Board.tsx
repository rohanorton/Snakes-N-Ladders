import * as React from 'react'
import { observer } from 'mobx-react'
import { Counter } from './Counter'
import { Game } from '../stores/GameStore'
import { range, flatMap } from 'lodash'

interface IProps {
    store: typeof Game.Type
}

const board: Array<number> = flatMap(
    // Generate 10 Rows of 10 going in descending order
    range(10, 0).map(row => {
        const i = row * 10
        return range(i, i - 10)
    }),
    // Reverse every other line
    (x, i) => (i % 2 == 0 ? x : x.reverse())
)

const SnakesAndLadders = () => {
    // Source of SVG content: https://codepen.io/alvaromontoro/pen/gjWPNW
    return (
        <svg className="svg-container" viewBox="0 0 600 600" preserveAspectRatio="none">
            <g className="snake-svg">
                // 16 -> 6
                <path d="M343 584C352 567 344 553 320 553 296 553 286 562 279 568 272 573 238 592 238 558 237 524 253 517 253 517 253 517 270 517 270 509 270 498 238 501 247 514 227 537 230 556 230 561 229 567 239 605 281 575 324 544 349 562 343 585Z" />
                // 46 -> 25
                <path d="M278 457C291 438 262 428 247 444 230 464 193 450 231 420 256 400 300 425 335 395 349 381 334 338 334 338 334 338 348 325 325 324 301 322 306 341 326 340 334 358 346 401 285 401 231 401 205 416 205 446 206 472 244 462 250 452 258 441 281 435 278 458Z" />
                // 49 -> 11
                <path d="M572 506C555 514 511 516 518 456 526 396 518 380 490 388 457 397 436 346 492 335 507 341 518 334 518 326 518 317 494 313 489 326 422 337 448 410 489 398 525 384 510 449 510 456 510 462 502 547 572 508Z" />
                // 62 -> 19
                <path d="M90 226C98 257 69 322 128 332 187 342 181 381 120 382 59 383 53 425 54 433 56 450 87 467 87 481 87 495 76 506 76 512 84 505 95 496 96 480 97 464 60 447 64 425 68 403 99 392 134 391 169 390 219 344 131 322 94 313 100 279 101 256 102 233 101 229 100 225 105 223.6 106 214 96 210 86 205 65.8 211 83 223 85.9 225 88 226 90 226Z" />
                // 64 -> 60
                <path d="M22 282C35 271 58 266 81 273 104 280 144 278 145 253 146 228 175 208 193 213 204 198 220 210 220 216 220 222 201 229 193 221 182 222 157 229 156 252 155 275 139 297 86 281 33 268 22 283 22 283Z" />
                // 76 -> 53
                <path d="M453 271C433 285 396 289 400 261 405 233 394 223 369 223 343 224 319 167 376 161 379 168 401 168 402 156 403 143 376 143 375 152 300 162 333 233 366 233 402 233 388 258 389 266 390 281 414 309 453 272Z" />
                // 92 -> 88
                <path d="M441 95C457 93 479 72 445 52 415 33 434 16 451 16 468 16 489 39 492 40 495 28 521 33 521 43 521 54 496 54 490 48 490 48 466 23 450 25 434 27 439 43 459 51 479 61 473 101 441 96Z" />
                // 99 -> 80
                <path d="M19 138C45 154 84 152 63 119 43 87 59 85 79 84 99 83 103 77 94 40 85 46 73 39 72 32 72 25 109 13 102 35 117 69 108 100 79 94 52 88 70 114 73 118 82 127 83 190 18 138Z" />
            </g>
            <g className="ladder-svg">
                <path d="M89,574 140,392 M102,578 153,396 M388,581 385,508 M402,580 399,507 M449,552 554,395 M460,560 565,403 M320,516 333,444 M334,518 347,446 M24,436 74,329 M36,442 87,334 M430,458 210,99 M441,450 222,93 M264,393 214,339 M273,384 224,330 M563,284 391,203 M568,271 396,190 M570,149 559,31 M584,148 573,30 M142,158 155,40 M156,160 169,42 M397,101 379,30 M411,97 392,26" />
                <path d="M91,568 104,573 M94,556 105,561 M97,544 108,549 M100,532 111,537 M103,520 114,525 M107,508 118,513 M111,496 122,501 M114,484 125,489 M117,472 128,477 M121,460 132,465 M124,448 135,453 M128,436 139,441 M131,424 142,429 M134,412 145,417 M138,400 149,405 M388,575 401,574 M388,563 401,562 M388,552 401,551 M388,541 401,540 M388,530 400,529 M388,518 400,517 M452,546 464,555 M459,536 470,544 M466,526 476,533 M473,516 482,522 M479,508 490,515 M485,498 496,506 M492,488 502,495 M498,479 509,486 M504,469 515,477 M512,459 522,467 M517,449 528,457 M523,440 534,448 M530,430 541,438 M536,421 548,429 M542,412 554,419 M549,402 560,409 M322,510 335,512 M324,498 337,500 M326,486 339,488 M328,475 341,477 M330,463 343,465 M332,452 345,454 M258,388 268,378 M250,379 260,369 M243,370 252,361 M235,362 245,352 M227,353 236,344 M219,345 229,335 M27,430 40,436 M32,419 45,425 M37,408 49,414 M42,398 54,404 M47,388 59,394 M51,377 64,383 M56,366 69,372 M61,356 75,362 M66,345 79,351 M71,335 84,341 M427,453 438,444 M420,443 432,434 M414,433 426,424 M408,423 420,414 M402,413 413,404 M395,402 407,393 M388,391 400,382 M381,379 393,370 M374,368 386,359 M367,356 378,347 M359,344 371,336 M352,332 364,324 M345,320 357,312 M338,308 350,300 M330,296 342,288 M323,284 335,276 M316,272 328,264 M308,260 320,252 M301,248 313,240 M294,236 305,228 M287,224 298,216 M280,212 291,205 M273,200 284,193 M267,188 277,181 M259,175 269,168 M251,163 261,156 M244,151 254,144 M236,139 246,132 M229,127 239,120 M222,115 232,108 M215,103 225,96 M143,152 157,154 M144,140 158,142 M145,128 159,130 M146,116 160,118 M147,104 161,106 M149,92 163,94 M150,80 164,82 M151,68 165,70 M153,56 167,58 M154,44 168,46 M396,95 409,91 M393,84 406,80 M390,73 403,69 M387,62 400,58 M384,51 397,47 M381,40 394,36 M570,143 583,142 M568,130 582,129 M566,117 580,116 M565,104 577,103 M564,91 576,90 M563,78 575,77 M562,65 574,64 M561,52 573,51 M560,38 572,37 M556,281 562,268 M546,276 552,263 M536,271 542,258 M526,266 532,254 M516,261 522,249 M506,255 512,244 M496,250 502,239 M486,245 492,235 M476,240 482,230 M466,236 472,225 M456,231 462,220 M446,226 451,216 M436,221 441,211 M425,218 431,206 M415,213 421,201 M405,208 411,196 M395,204 401,192" />
            </g>
        </svg>
    )
}

export const Board = observer(({ store }: IProps) => {
    return (
        <div>
            {store.isStarted || (
                <h2 className="code-heading">
                    Get friends to join by using this code:<br />
                    {store.gameId}
                </h2>
            )}
            <div className="button-bar">
                {store.isStarted ? (
                    <button hidden={!store.yourTurn} onClick={store.move}>
                        Move
                    </button>
                ) : (
                    <button hidden={store.players.length < 2} onClick={store.start}>
                        Start
                    </button>
                )}
            </div>
            <div className="board-container">
                <div className="board">
                    {board.map(i => (
                        <div
                            key={i.toString()}
                            className={`tile ${i % 2 !== 0 ? 'tile-odd' : 'tile-even'}`}
                        >
                            {i}
                            <div className="counter-container">
                                {store.players
                                    .filter(player => player.position === i)
                                    .map((player, i, playersOnSquare) => (
                                        <Counter key={player.id} player={player} />
                                    ))}
                            </div>
                        </div>
                    ))}
                    <SnakesAndLadders />
                </div>
            </div>
        </div>
    )
})
